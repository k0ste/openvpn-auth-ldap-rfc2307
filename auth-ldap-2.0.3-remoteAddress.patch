diff -Naupr auth-ldap-2.0.3.orig/src/auth-ldap.m auth-ldap-2.0.3/src/auth-ldap.m
--- auth-ldap-2.0.3.orig/src/auth-ldap.m	2007-01-22 19:50:42.000000000 +0100
+++ auth-ldap-2.0.3/src/auth-ldap.m		2009-04-29 13:21:06.000000000 +0200
@@ -533,7 +533,10 @@
 	}
 
 	if (tableName)
-		if (!pf_client_connect_disconnect(ctx, tableName, remoteAddress, connecting))
+		if (!remoteAddress) {
+			[TRLog debug: "No remote address supplied to OpenVPN LDAP Plugin (OPENVPN_PLUGIN_CLIENT_CONNECT)."];
+			return OPENVPN_PLUGIN_FUNC_ERROR;
+		} else if (!pf_client_connect_disconnect(ctx, tableName, remoteAddress, connecting))
 			return OPENVPN_PLUGIN_FUNC_ERROR;
 #endif /* HAVE_PF */
 
@@ -587,20 +590,10 @@
 			break;
 		/* New connection established */
 		case OPENVPN_PLUGIN_CLIENT_CONNECT:
-			if (!remoteAddress) {
-				[TRLog debug: "No remote address supplied to OpenVPN LDAP Plugin (OPENVPN_PLUGIN_CLIENT_CONNECT)."];
-				ret = OPENVPN_PLUGIN_FUNC_ERROR;
-			} else {
-				ret = handle_client_connect_disconnect(ctx, ldap, ldapUser, remoteAddress, YES);
-			}
+			ret = handle_client_connect_disconnect(ctx, ldap, ldapUser, remoteAddress, YES);
 			break;
 		case OPENVPN_PLUGIN_CLIENT_DISCONNECT:
-			if (!remoteAddress) {
-				[TRLog debug: "No remote address supplied to OpenVPN LDAP Plugin (OPENVPN_PLUGIN_CLIENT_DISCONNECT)."];
-				ret = OPENVPN_PLUGIN_FUNC_ERROR;
-			} else {
-				ret = handle_client_connect_disconnect(ctx, ldap, ldapUser, remoteAddress, NO);
-			}
+			ret = handle_client_connect_disconnect(ctx, ldap, ldapUser, remoteAddress, NO);
 			break;
 		default:
 			[TRLog debug: "Unhandled plugin type in OpenVPN LDAP Plugin (type=%d)", type];
